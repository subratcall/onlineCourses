function [J, grad] = costFunctionReg(theta, X, y, lambda)
%COSTFUNCTIONREG Compute cost and gradient for logistic regression with regularization
%   J = COSTFUNCTIONREG(theta, X, y, lambda) computes the cost of using
%   theta as the parameter for regularized logistic regression and the
%   gradient of the cost w.r.t. to the parameters. 

% Initialize some useful values
m = length(y); % number of training examples

% You need to return the following variables correctly 
J = 0;
grad = zeros(size(theta));

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost of a particular choice of theta.
%               You should set J to the cost.
%               Compute the partial derivatives and set grad to the partial
%               derivatives of the cost w.r.t. each parameter in theta

%computing J

z =  X * theta;
h_theta = sigmoid(z);

cost = 0;
for i = 1 : m
	cost += -y(i) * log(h_theta(i)) - (1 - y(i))* log(1 - h_theta(i));
end

cost_lambda = 0;
for 2 =1 : size(theta)
	cost_lambda += theta(i) * theta(i);
end

J = cost / m + lambda * cost_lambda / (2 * m);

%computing grad
h_theta_y = h_theta - y;

for i = 1 : size(theta)
	cost = 0;
	
	if(i ==1)
		for j = 1 : m
			cost += h_theta_y(j)  * X(j,i);
		end
		grad(i) = cost / m;	
	else 		
		for j = 1 : m
			cost += h_theta_y(j)  * X(j,i) + lambda * theta(i) /m;
		end
		grad(i) = cost / m;
	endif

end


% =============================================================

end
